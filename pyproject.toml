[project]
name = "klib"
version = "1.3.2"
description = "Common data preprocessing and visualisation functions."
authors = [{ name = "Andreas Kanz", email = "andreas@akanz.de" }]
license = "MIT"
readme = "README.md"
requires-python = ">=3.9"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]

dependencies = [
    "Jinja2 >= 3.1.0",
    "matplotlib >= 3.6.0",
    "numpy >= 1.26.0",
    "pandas >=1.4,<3.0",
    "plotly >= 5.11.0",
    "scipy >= 1.10.0",
    "screeninfo >= 0.8.1",
    "seaborn >=0.12.0",
]

[dependency-groups]
dev = [
    "ipykernel >=6.29.5",
    "mypy >=1.11.2",
    "nbformat >=5.10.4",
    "pre-commit >=3.8.0",
    "pydocstyle >=6.2.3",
    "pytest >=8.3.3",
    "pytest-cov >=5.0.0",
    "ruff >=0.5.5",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.pydocstyle]
match_dir = "[^(?!tests|\\.)].*"     # not tests and not a folder that starts with a dot
match = "^(?!(__init__|setup)).*py$" # py files which do not start with __init__ or setup
convention = "numpy"

# Testing
[tool.pytest.ini_options]
required_plugins = ["pytest-cov"]
addopts = """
--color=yes \
--code-highlight=yes \
--verbose \
--junitxml=tests/reports/junit.xml \
--cov-report term-missing:skip-covered \
--cov-report=xml:tests/reports/coverage.xml \
--cov-report=html:tests/reports/htmlcov \
--cov=. -ra"""
minversion = "6.0"
testpaths = ["tests/"]

[tool.coverage.run]
omit = ["tests/*", "*/test_*.py", "*/__*__.py", "*_version.py"]
branch = true
data_file = "tests/.coverage"

[tool.coverage.report]
fail_skip_covered = true
exclude_also = [
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__:",
    "if TYPE_CHECKING",
    'class .*\bProtocol\):',
    '@(abc\.)?abstractmethod',
    "pragma: no cover",
    "def __repr__",
    "if 0:",
]

[tool.ruff]
line-length = 100
target-version = "py312"
fix = true

lint.select = ["ALL"]
lint.unfixable = [
    "C408",
    "D200",
    "D400",
    "D415",
    "E712",
    "E731",
    "ERA001",
    "F841",
    "PT001",
    "PT004",
    "PT022",
    "PT023",
    "RUF100",
    "SIM108",
]
lint.ignore = [
    "T201",
    "FBT001",
    "FBT002",
    "PLR0913",
    "D213",
    "D203",
    "UP038",
    "PD901",
]

extend-exclude = ["examples"]

[tool.ruff.lint.mccabe]
max-complexity = 8

[tool.ruff.lint.per-file-ignores]
"test**" = ["ANN", "D", "S101", "PLR", "PT009", "PT011", "N", "E501", "N801"]
"**/scripts/**" = ["ANN", "D", "S101", "PLR", "PT009", "PT011", "N", "E501"]

[tool.ruff.lint.isort]
force-single-line = true
order-by-type = false
